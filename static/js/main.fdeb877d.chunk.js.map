{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Loader/LoaderTailSpin.module.css","redux/contacts/api.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","components/Loader/LoaderTailSpin.jsx","components/ContactListWrapper/ContactListWrapper.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","fetchContacts","query","providesTags","addContact","mutation","contact","url","method","body","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","filterContacts","createAction","payload","id","shortid","generate","filter","createReducer","_","action","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","Section","title","children","className","styles","section","ContactForm","useState","name","setName","number","setNumber","contacts","data","isLoading","handleChange","target","value","onSubmit","e","preventDefault","currentTarget","some","toLowerCase","alert","s","label","type","input","pattern","required","onChange","btnAdd","disabled","getFilter","select","state","ContactList","visibleContacts","useSelector","normalizedFilter","includes","getVisibleContacts","list","map","btnDelete","onClick","LoaderTailSpin","loader","color","height","width","ContactsListWrapper","isFetching","Filter","filterValue","dispatch","useDispatch","actions","App","ContactListWrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdeb877d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__jwjzs\",\"input\":\"ContactForm_input__2yiix\",\"btnAdd\":\"ContactForm_btnAdd__3mbAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2iOBs\",\"title\":\"Section_title__e532S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsListItem\":\"ContactList_contactsListItem__25Pcp\",\"btnDelete\":\"ContactList_btnDelete__2o2L8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3CYXi\",\"label\":\"Filter_label__2NDvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoaderTailSpin_loader__4SjiS\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst URL = 'https://61e16dc463f8fc0017618bef.mockapi.io/api/contacts';\r\n\r\nexport const contactsApi = createApi({\r\n    reducerPath: 'contacts',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: URL,\r\n    }),\r\n    endpoints: builder => ({\r\n        fetchContacts: builder.query({\r\n            query: () => `/contacts`,\r\n            providesTags: ['contacts'],\r\n        }),\r\n\r\n        addContact: builder.mutation({\r\n            query: contact => ({\r\n                url: `/contacts`,\r\n                method: 'POST',\r\n                body: contact,\r\n            }),\r\n            invalidatesTags: ['contacts'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: contactId => ({\r\n                url: `/contacts/${contactId}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['contacts'],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useFetchContactsQuery,\r\n    useAddContactMutation,\r\n    useDeleteContactMutation,\r\n} = contactsApi;","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nexport const addContact = createAction('phoneBook/addContact', contact => {\r\n    return {\r\n        payload: {\r\n            ...contact,\r\n            id: shortid.generate(),\r\n        },\r\n    };\r\n});\r\nexport const deleteContact = createAction('phoneBook/deleteContact');\r\nexport const filterContacts = createAction('phoneBook/filter');","import { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContacts } from './contacts-actions';\r\n\r\n\r\nexport const filter = createReducer('', {\r\n    [filterContacts]: (_, action) => action.payload,\r\n});\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { contactsApi } from './contacts/api';\r\nimport { filter } from './contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        filter,\r\n        [contactsApi.reducerPath]: contactsApi.reducer,\r\n    },\r\n\r\n    middleware: getDefaultMiddleware => [\r\n        ...getDefaultMiddleware(),\r\n        contactsApi.middleware,\r\n    ],\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children}) => {\r\n    return (<section className={styles.section}><h1 className={styles.title}>{title}</h1>\r\n    {children}</section>\r\n    )\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node\r\n}","import { useState } from \"react\";\r\nimport {\r\n  useAddContactMutation,\r\n  useFetchContactsQuery,\r\n} from \"../../redux/contacts/api\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const { data: contacts } = useFetchContactsQuery();\r\n  const [addContact, { isLoading }] = useAddContactMutation();\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    name === \"name\" ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  function reset() {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const contact = {\r\n      name: e.currentTarget.name.value,\r\n      number: e.currentTarget.number.value,\r\n    };\r\n    if (\r\n      contacts.some((contact) => {\r\n        return contact.name.toLowerCase() === name.toLowerCase();\r\n      })\r\n    ) {\r\n      alert(name + \" is already in contacts.\");\r\n      return;\r\n    } else {\r\n      addContact(contact);\r\n    }\r\n    reset();\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <label className={s.label}>\r\n        Phone:\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n      <button type=\"submit\" className={s.btnAdd} disabled={isLoading}>\r\n        ADD CONTACT\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { contactsApi } from './api';\r\n\r\nexport const getContacts = contactsApi.endpoints.fetchContacts.select();\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getVisibleContacts = (state, contacts) => {\r\n    const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n        contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter) ||\r\n            contact.number.includes(normalizedFilter),\r\n    );\r\n};","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nimport { useDeleteContactMutation } from \"../../redux/contacts/api\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts }) {\r\n  const visibleContacts = useSelector((state) =>\r\n    getVisibleContacts(state, contacts)\r\n  );\r\n\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {visibleContacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button className={s.btnDelete} onClick={() => deleteContact(id)}>\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n","import React from \"react\";\r\nimport { TailSpin } from \"react-loader-spinner\";\r\nimport s from \"./LoaderTailSpin.module.css\";\r\n\r\nconst LoaderTailSpin = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <TailSpin type=\"TailSpin\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderTailSpin;\r\n","import { useFetchContactsQuery } from \"../../redux/contacts/api.js\";\r\nimport ContactList from \"../ContactList\";\r\nimport LoaderTailSpin from \"../Loader\";\r\n\r\nconst ContactsListWrapper = () => {\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n\r\n  return (\r\n    <div>\r\n      {isFetching && <LoaderTailSpin />}\r\n      {contacts && <ContactList contacts={contacts} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsListWrapper;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter() {\r\n  const filterValue = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const changeFilter = (e) => dispatch(actions.filterContacts(e.target.value));\r\n\r\n  return (\r\n    <label className={s.label}>\r\n      Filter{\" \"}\r\n      <input\r\n        type=\"text\"\r\n        className={s.input}\r\n        name=\"filter\"\r\n        value={filterValue}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","\n\nimport Section from './components/Section';\nimport ContactForm from \"./components/ContactForm\";\nimport ContactListWrapper from \"./components/ContactListWrapper\";\nimport Filter from \"./components/Filter\"\n\nconst App = () => {\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm\n        />\n      </Section>\n      <Section title='Contacts'>\n        <Filter\n        />\n        <ContactListWrapper\n        />\n\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root'),\n);"],"sourceRoot":""}